{"remainingRequest":"/Users/guliangbin/Desktop/sail-vue3/node_modules/babel-loader/lib/index.js!/Users/guliangbin/Desktop/sail-vue3/node_modules/ts-loader/index.js??ref--14-2!/Users/guliangbin/Desktop/sail-vue3/node_modules/eslint-loader/index.js??ref--13-0!/Users/guliangbin/Desktop/sail-vue3/src/locales/dictionaries/base.ts","dependencies":[{"path":"/Users/guliangbin/Desktop/sail-vue3/src/locales/dictionaries/base.ts","mtime":1622527563837},{"path":"/Users/guliangbin/Desktop/sail-vue3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guliangbin/Desktop/sail-vue3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/guliangbin/Desktop/sail-vue3/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/guliangbin/Desktop/sail-vue3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGV4dGVuZCBmcm9tICcuLi8uLi9nbG9iYWwvdHMvZnVuY3Rpb24vZXh0ZW5kJzsKZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlRmllbGRzKCkgewogIHZhciBiYXNlID0gewogICAgbmFtZTogJ+WQjeensCcsCiAgICB0eXBlOiAn57G75Z6LJywKICAgIHByaWNlOiAn5Lu35qC8JywKICAgIGRpc2NvdW50OiAn5oqY5omjJywKICAgIHNvcnQ6ICfmjpLluo8nLAogICAgc3RhdHVzOiAn54q25oCBJywKICAgIHN0YXR1c2VzOiB7CiAgICAgICctMSc6ICflhajpg6gnLAogICAgICAxOiAn5q2j5bi4JywKICAgICAgMjogJ+emgeeUqCcsCiAgICAgIGNvbG9yOiB7CiAgICAgICAgMTogJ3ByaW1hcnknLAogICAgICAgIDI6ICdkYW5nZXInCiAgICAgIH0KICAgIH0sCiAgICB1bml0OiB7CiAgICAgIHl1YW46ICflhYMnLAogICAgICB3YW46ICfkuIcnLAogICAgICB5aTogJ+S6vycKICAgIH0sCiAgICByZW1hcms6ICflpIfms6gnLAogICAgY3JlYXRlZF9hdDogJ+WIm+W7uuaXtumXtCcsCiAgICB1cGRhdGVkX2F0OiAn5pu05paw5pe26Ze0JywKICAgIGNvdW50OiAn5pWw6YePJywKICAgIGFjdGlvbjogJ+aTjeS9nCcsCiAgICBtb3JlOiAn5pu05aSaJywKICAgIHNlYXJjaDogJ+aQnOe0oicsCiAgICBzY3JlZW46ICfnrZvpgIknLAogICAgdG90YWw6ICfmgLvorqEnLAogICAgb3B0OiAn6YCJ5oupJywKICAgIHRhZzogJ+agh+etvicsCiAgICBjb3B5OiAn5aSN5Yi2JywKICAgIHNldHRsZW1lbnQ6ICfnu5PnrpcnLAogICAgc2VsZWN0aW9uOiAn6YCJ55SoJywKICAgIGFsbDogJ+WFqOmDqCcsCiAgICB0aW1lOiAn5pe26Ze0JywKICAgIGRhdGU6ICfml6XmnJ8nLAogICAgc3RhcnREYXRlOiAn5byA5aeL5pel5pyfJywKICAgIGVuZERhdGU6ICfnu5PmnZ/ml6XmnJ8nLAogICAgbGFzdE1vbnRoOiAn5LiK5pyIJywKICAgIGxhc3RXZWVrOiAn5LiK5ZGoJywKICAgIHRvZGF5OiAn5LuK5pelJywKICAgIHRoaXNNb250aDogJ+acrOaciCcsCiAgICB0aGlzV2VlazogJ+acrOWRqCcsCiAgICB0aGlzWWVhcjogJ+S7iuW5tCcsCiAgICBjb250ZW50OiAn5YaF5a65JywKICAgIGZvcmV2ZXI6ICfmsLjkuYUnLAogICAgZGF5OiAn5aSpJywKICAgIHNlbGVjdGVkOiAn5bey6YCJJwogIH07IC8vIOecgeW4guWMuuiBlOe6p+mAieaLqQoKICB2YXIgcmVnaW9uID0gewogICAgcmVnaW9uOiAn5omA5Zyo5Zyw5Yy6JywKICAgIC8vIOS7peS4i+S4uuWunumZheS6pOS6kuWtl+autQogICAgcHJvdmluY2VfaWQ6ICfmiYDlnKjlnLDljLonLAogICAgY2l0eV9pZDogJ+aJgOWcqOWcsOWMuicsCiAgICBkaXN0cmljdF9pZDogJ+aJgOWcqOWcsOWMuicKICB9OwogIHZhciB0aXRsZSA9IHsKICAgIG5vdGlmeTogewogICAgICBvcGVyYXRpb246ICfmiafooYznu5PmnpwnLAogICAgICBzd2VldF90aXA6ICfmuKnppqjmj5DnpLonLAogICAgICBtZXNzYWdlOiAn5raI5oGv6YCa55+lJwogICAgfQogIH07CiAgdmFyIHdlZWsgPSB7CiAgICBzdW46ICfmmJ/mnJ/ml6UnLAogICAgbW9uOiAn5pif5pyf5LiAJywKICAgIHR1ZXM6ICfmmJ/mnJ/kuownLAogICAgd2VkOiAn5pif5pyf5LiJJywKICAgIHRodXI6ICfmmJ/mnJ/lm5snLAogICAgZnJpOiAn5pif5pyf5LqUJywKICAgIHNhdDogJ+aYn+acn+WFrScKICB9OwogIHZhciBhcHAgPSB7CiAgICBjb3B5cmlnaHQ6ICcnLAogICAgY29uc3VsdGF0aW9uOiAn5YWN6LS55ZKo6K+i54Ot57q/77yaJywKICAgIGFib3V0X2xpbms6IHt9CiAgfTsKICByZXR1cm4gZXh0ZW5kKGJhc2UsIHJlZ2lvbiwgdGl0bGUsIHdlZWssIGFwcCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQmFzZVJ1bGVzKCkgewogIHJldHVybiBmYWxzZTsKfSAvLyDliJ3lp4vpgJrnlKjlrZfmrrUKCmV4cG9ydCB2YXIgZmllbGRzID0gZ2VuZXJhdGVGaWVsZHMoKTsKLyoqCiAqIOeUn+aIkOmcgOimgeeahOWfuuehgOivjeWFuAogKiBAcGFyYW0gbmVlZAogKiBAcmV0dXJucyB7e319CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQmFzZUZpZWxkcyhuZWVkKSB7CiAgdmFyIGJhc2UgPSB7fTsKCiAgZm9yICh2YXIgX2kgPSAwLCBuZWVkXzEgPSBuZWVkOyBfaSA8IG5lZWRfMS5sZW5ndGg7IF9pKyspIHsKICAgIHZhciB2ID0gbmVlZF8xW19pXTsKICAgIGJhc2Vbdl0gPSBmaWVsZHNbdl07CiAgfQoKICByZXR1cm4gYmFzZTsKfQovKioKICog55Sf5oiQIHBsYWNlaG9sZGVyCiAqIEByZXR1cm5zIHt7fX0KICovCgpleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVQbGFjZWhvbGRlcnMoZmllbGRzLCBpTCwgc0wpIHsKICBpZiAoaUwgPT09IHZvaWQgMCkgewogICAgaUwgPSBbXTsKICB9CgogIGlmIChzTCA9PT0gdm9pZCAwKSB7CiAgICBzTCA9IFtdOwogIH0KCiAgdmFyIHBsYWNlaG9sZGVyID0ge307CgogIGZvciAodmFyIGsgaW4gZmllbGRzKSB7CiAgICBpZiAoZmllbGRzLmhhc093blByb3BlcnR5KGspICYmIGlMLmluZGV4T2YoaykgPiAtMSkgcGxhY2Vob2xkZXJba10gPSAn6K+36L6T5YWlJyArIGZpZWxkc1trXTtlbHNlIGlmIChmaWVsZHMuaGFzT3duUHJvcGVydHkoaykgJiYgc0wuaW5kZXhPZihrKSA+IC0xKSBwbGFjZWhvbGRlcltrXSA9ICfor7fpgInmi6knICsgZmllbGRzW2tdOwogIH0KCiAgcmV0dXJuIHBsYWNlaG9sZGVyOwp9Ci8qKgogKiDlv4Xloavop4TliJkKICogQHBhcmFtIGZpZWxkCiAqIEBwYXJhbSB0eXBlCiAqIEByZXR1cm5zIHtzdHJpbmd9CiAqLwoKZXhwb3J0IHZhciByZXF1aXJlZFJ1bGUgPSBmdW5jdGlvbiAoZmllbGQsIHR5cGUpIHsKICBpZiAodHlwZSA9PT0gdm9pZCAwKSB7CiAgICB0eXBlID0gMTsKICB9CgogIHN3aXRjaCAodHlwZSkgewogICAgZGVmYXVsdDoKICAgICAgcmV0dXJuIGZpZWxkICsgJ+S4jeiDveS4uuepuic7CgogICAgY2FzZSAxOgogICAgICByZXR1cm4gJ+ivt+Whq+WGmScgKyBmaWVsZDsKCiAgICBjYXNlIDI6CiAgICAgIHJldHVybiAn6K+36YCJ5oupJyArIGZpZWxkOwogIH0KfTsKLyoqCiAqIOaYr+WQpuWtmOWcqOmqjOivgQogKiBAcGFyYW0gZmllbGQKICogQHJldHVybnMge3N0cmluZ30KICovCgpleHBvcnQgdmFyIGV4aXN0c1J1bGUgPSBmdW5jdGlvbiAoZmllbGQpIHsKICByZXR1cm4gZmllbGQgKyAnIOS4jeWtmOWcqCc7Cn07Ci8qKgogKiDplb/luqbop4TliJkKICogQHBhcmFtIGZpZWxkCiAqIEBwYXJhbSBsZW5ndGgKICogQHBhcmFtIHR5cGUKICogQHJldHVybnMge3N0cmluZ30KICovCgpleHBvcnQgdmFyIGxlbmd0aFJ1bGUgPSBmdW5jdGlvbiAoZmllbGQsIGxlbmd0aCwgdHlwZSkgewogIGlmICh0eXBlID09PSB2b2lkIDApIHsKICAgIHR5cGUgPSAxOwogIH0KCiAgc3dpdGNoICh0eXBlKSB7CiAgICBkZWZhdWx0OgogICAgICByZXR1cm4gZmllbGQgKyAn5LiN6IO96LaF6L+HJyArIGxlbmd0aCArICfkuKrlrZfnrKYnOwoKICAgIGNhc2UgMjoKICAgICAgcmV0dXJuIGZpZWxkICsgJ+S4jeiDveWwj+S6jicgKyBsZW5ndGggKyAn5Liq5a2X56ymJzsKICB9Cn07Ci8qKgogKiDplb/luqbop4TliJkKICogQHBhcmFtIHsgc3RyaW5nIH0gZmllbGQg6K+t6KiA5YyF5a2X5q61CiAqIEBwYXJhbSB7IHN0cmluZyB9IG1haW4g6Ieq5a6a5LmJ6K+t6KiACiAqIEBwYXJhbSB7IG51bWJlciB9IHR5cGUg6L+U5Zue5qih5p2/57G75Z6LCiAqIEByZXR1cm5zIHtzdHJpbmd9CiAqLwoKZXhwb3J0IHZhciBmb3JtYXRSdWxlID0gZnVuY3Rpb24gKGZpZWxkLCBtYWluLCB0eXBlKSB7CiAgaWYgKG1haW4gPT09IHZvaWQgMCkgewogICAgbWFpbiA9ICfmoLzlvI/plJnor68nOwogIH0KCiAgaWYgKHR5cGUgPT09IHZvaWQgMCkgewogICAgdHlwZSA9IDE7CiAgfQoKICBzd2l0Y2ggKHR5cGUpIHsKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBmaWVsZCArIG1haW47CgogICAgY2FzZSAyOgogICAgICByZXR1cm4gZmllbGQgKyAn5LiN6IO96L6T5YWlJyArIG1haW47CiAgfQp9OwovKioKICog5LiA6Ie05oCn6KeE5YiZCiAqIEBwYXJhbSB7IHN0cmluZyB9IGZpZWxkRiDnrKzkuIDor63oqIDljIXlrZfmrrUKICogQHBhcmFtIHsgc3RyaW5nIH0gZmllbGRTIOesrOS6jOivreiogOWMheWtl+autQogKiBAcGFyYW0geyBudW1iZXIgfSB0eXBlIOi/lOWbnuaooeadv+exu+WeiwogKiBAcmV0dXJucyB7c3RyaW5nfQogKi8KCmV4cG9ydCB2YXIgZXF1YWxSdWxlID0gZnVuY3Rpb24gKGZpZWxkRiwgZmllbGRTLCB0eXBlKSB7CiAgaWYgKHR5cGUgPT09IHZvaWQgMCkgewogICAgdHlwZSA9IDE7CiAgfQoKICBzd2l0Y2ggKHR5cGUpIHsKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBmaWVsZEYgKyAiXHU0RTBFIiArIGZpZWxkUyArICJcdTRFMERcdTRFMDBcdTgxRjQiOwogIH0KfTsgLy8g55Sf5oiQcGxhY2Vob2xkZXIKCnZhciBpbnB1dExpc3QgPSBbJ3JlbWFyaycsICdjb250ZW50J107CnZhciBzZWxlY3RMaXN0ID0gWyd0aW1lJywgJ2RhdGUnLCAnc3RhcnREYXRlJywgJ2VuZERhdGUnXTsKZXhwb3J0IHZhciBwbGFjZWhvbGRlciA9IGdlbmVyYXRlUGxhY2Vob2xkZXJzKGZpZWxkcywgaW5wdXRMaXN0LCBzZWxlY3RMaXN0KTsgLy8g55Sf5oiQ5pyA57uI6K+t6KiA5YyFCgpleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVMb2NhbGVzKCkgewogIHZhciBiYXNlID0gZ2VuZXJhdGVGaWVsZHMoKTsKICBiYXNlLnBsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXI7CiAgcmV0dXJuIGJhc2U7Cn0KZXhwb3J0IHZhciBsb2NhbGVzID0gZ2VuZXJhdGVMb2NhbGVzKCk7CmV4cG9ydCBkZWZhdWx0IHsKICBsb2NhbGVzOiBsb2NhbGVzLAogIGdlbmVyYXRlQmFzZUZpZWxkczogZ2VuZXJhdGVCYXNlRmllbGRzLAogIGdlbmVyYXRlUGxhY2Vob2xkZXJzOiBnZW5lcmF0ZVBsYWNlaG9sZGVycywKICByZXF1aXJlZFJ1bGU6IHJlcXVpcmVkUnVsZSwKICBsZW5ndGhSdWxlOiBsZW5ndGhSdWxlLAogIGZvcm1hdFJ1bGU6IGZvcm1hdFJ1bGUKfTs="},{"version":3,"sources":["/Users/guliangbin/Desktop/sail-vue3/node_modules/eslint-loader/index.js??ref--13-0!/Users/guliangbin/Desktop/sail-vue3/src/locales/dictionaries/base.ts"],"names":[],"mappings":"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","sourcesContent":["import extend from '../../global/ts/function/extend'\r\nimport extendType from '@/interfaces/types/extendType'\r\n\r\nexport function generateFields() :extendType {\r\n    const base = {\r\n        name: '名称',\r\n        type: '类型',\r\n        price: '价格',\r\n        discount: '折扣',\r\n        sort: '排序',\r\n        status: '状态',\r\n        statuses: { '-1': '全部', 1: '正常', 2: '禁用', color: { 1: 'primary', 2: 'danger' }},\r\n        unit: { yuan: '元', wan: '万', yi: '亿' },\r\n        remark: '备注',\r\n        created_at: '创建时间',\r\n        updated_at: '更新时间',\r\n        count: '数量',\r\n        action: '操作',\r\n        more: '更多',\r\n        search: '搜索',\r\n        screen: '筛选',\r\n        total: '总计',\r\n        opt: '选择',\r\n        tag: '标签',\r\n        copy: '复制',\r\n        settlement: '结算',\r\n        selection: '选用',\r\n        all: '全部',\r\n        time: '时间',\r\n        date: '日期',\r\n        startDate: '开始日期',\r\n        endDate: '结束日期',\r\n        lastMonth: '上月',\r\n        lastWeek: '上周',\r\n        today: '今日',\r\n        thisMonth: '本月',\r\n        thisWeek: '本周',\r\n        thisYear: '今年',\r\n        content: '内容',\r\n        forever: '永久',\r\n        day: '天',\r\n        selected: '已选',\r\n    }\r\n    // 省市区联级选择\r\n    const region = {\r\n        region: '所在地区', // 表单展示字段\r\n        // 以下为实际交互字段\r\n        province_id: '所在地区',\r\n        city_id: '所在地区',\r\n        district_id: '所在地区',\r\n    }\r\n    const title = {\r\n        notify: {\r\n            operation: '执行结果',\r\n            sweet_tip: '温馨提示',\r\n            message: '消息通知'\r\n        }\r\n    }\r\n    const week = {\r\n        sun: '星期日',\r\n        mon: '星期一',\r\n        tues: '星期二',\r\n        wed: '星期三',\r\n        thur: '星期四',\r\n        fri: '星期五',\r\n        sat: '星期六'\r\n    }\r\n    const app = {\r\n        copyright: '',\r\n        consultation: '免费咨询热线：',\r\n        about_link: {\r\n\r\n        }\r\n    }\r\n    return extend(base, region, title, week, app)\r\n}\r\n\r\nexport function generateBaseRules() :boolean {\r\n    return false\r\n}\r\n\r\n// 初始通用字段\r\nexport const fields :extendType = generateFields()\r\n\r\n/**\r\n * 生成需要的基础词典\r\n * @param need\r\n * @returns {{}}\r\n */\r\nexport function generateBaseFields(need :string[]) :extendType {\r\n    let base :extendType = {}\r\n    for (const v of need) {\r\n        base[v] = fields[v]\r\n    }\r\n    return base\r\n}\r\n\r\n/**\r\n * 生成 placeholder\r\n * @returns {{}}\r\n */\r\nexport function generatePlaceholders(fields :extendType, iL :string[] = [], sL :string[] = []) :extendType {\r\n    let placeholder :extendType = {}\r\n    for (const k in fields) {\r\n        if (fields.hasOwnProperty(k) && iL.indexOf(k) > -1) placeholder[k] = '请输入' + fields[k]\r\n        else if (fields.hasOwnProperty(k) && sL.indexOf(k) > -1) placeholder[k] = '请选择' + fields[k]\r\n    }\r\n    return placeholder\r\n}\r\n\r\n/**\r\n * 必填规则\r\n * @param field\r\n * @param type\r\n * @returns {string}\r\n */\r\nexport const requiredRule = (field :string, type :number = 1) :string => {\r\n    switch (type) {\r\n        default:\r\n            return field + '不能为空'\r\n        case 1:\r\n            return '请填写' + field\r\n        case 2:\r\n            return '请选择' + field\r\n    }\r\n}\r\n\r\n/**\r\n * 是否存在验证\r\n * @param field\r\n * @returns {string}\r\n */\r\nexport const existsRule = (field :string) :string => {\r\n    return field + ' 不存在'\r\n}\r\n\r\n/**\r\n * 长度规则\r\n * @param field\r\n * @param length\r\n * @param type\r\n * @returns {string}\r\n */\r\nexport const lengthRule = (field :string, length :number, type :number = 1) :string => {\r\n    switch (type) {\r\n        default:\r\n            return field + '不能超过' + length + '个字符'\r\n        case 2:\r\n            return field + '不能小于' + length + '个字符'\r\n    }\r\n}\r\n\r\n/**\r\n * 长度规则\r\n * @param { string } field 语言包字段\r\n * @param { string } main 自定义语言\r\n * @param { number } type 返回模板类型\r\n * @returns {string}\r\n */\r\nexport const formatRule = (field :string, main :string = '格式错误', type :number = 1) :string => {\r\n    switch (type) {\r\n        default:\r\n            return field + main\r\n        case 2:\r\n            return field + '不能输入' + main\r\n    }\r\n}\r\n\r\n/**\r\n * 一致性规则\r\n * @param { string } fieldF 第一语言包字段\r\n * @param { string } fieldS 第二语言包字段\r\n * @param { number } type 返回模板类型\r\n * @returns {string}\r\n */\r\nexport const equalRule = (fieldF :string, fieldS :string, type :number = 1) :string => {\r\n    switch (type) {\r\n        default:\r\n            return `${fieldF}与${fieldS}不一致`\r\n    }\r\n}\r\n\r\n// 生成placeholder\r\nconst inputList :string[] = ['remark', 'content']\r\nconst selectList :string[] = ['time', 'date', 'startDate', 'endDate']\r\nexport const placeholder :extendType = generatePlaceholders(fields, inputList, selectList)\r\n\r\n// 生成最终语言包\r\nexport function generateLocales() :extendType {\r\n    let base = generateFields()\r\n    base.placeholder = placeholder\r\n    return base\r\n}\r\n\r\nexport const locales = generateLocales()\r\n\r\nexport default {\r\n    locales,\r\n    generateBaseFields,\r\n    generatePlaceholders,\r\n    requiredRule,\r\n    lengthRule,\r\n    formatRule\r\n}\r\n"],"sourceRoot":""}]}