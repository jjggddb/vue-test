{"remainingRequest":"/Users/guliangbin/vue-3-typeScript/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/guliangbin/vue-3-typeScript/src/views/About.vue?vue&type=template&id=039c5b43","dependencies":[{"path":"/Users/guliangbin/vue-3-typeScript/src/views/About.vue","mtime":1622622503010},{"path":"/Users/guliangbin/vue-3-typeScript/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guliangbin/vue-3-typeScript/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/guliangbin/vue-3-typeScript/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/guliangbin/vue-3-typeScript/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/guliangbin/vue-3-typeScript/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iYWJvdXQiPgogICAgPGgxPlRoaXMgaXMgYW4gYWJvdXQgcGFnZTwvaDE+CiAgICA8aDI+e3skdCgnYmFzZS5uYW1lJyl9fTwvaDI+CiAgICA8aW5wdXQgdi1tb2RlbD0iX21zZyIvPgogICAgPGJyPgogICAgPGVsLWJ1dHRvbiB0eXBlPSJkYW5nZXIiPnt7bmV3X21zZ319PC9lbC1idXR0b24+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/guliangbin/vue-3-typeScript/src/views/About.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/guliangbin/vue-3-typeScript/src/views/About.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n    <h2>{{$t('base.name')}}</h2>\n    <input v-model=\"_msg\"/>\n    <br>\n    <el-button type=\"danger\">{{new_msg}}</el-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\n    import { Options, Vue } from 'vue-class-component';\n\n    interface funcType {\n        (item: string, item_: string) : string\n    }\n\n    interface test {\n        name: string,\n        getValue() : string\n    }\n\n    let test_: test = {\n        name: 'test_',\n        getValue(): string {\n            return this.name\n        }\n    }\n\n    @Options({\n        components: {\n        },\n        mixins: [],\n        data() {\n            return {\n                msg: 'This is a msg',\n                testName: 'this is test name'\n            }\n        },\n\n        methods: {\n            Add(x: number, y: number) : number {\n                return x + y\n            }\n        },\n        computed: {\n            new_msg() : string {\n                let msg : string = this.msg\n                let num : number = this.Add(3,4)\n                let name : string = test_.getValue()\n                return msg + num + name\n            }\n        },\n        mounted() : void {\n            console.log(this.$transform('base.name'))\n            console.log(this.$t('base.status'))\n            const test = {\n                name: 'kkk'\n            }\n            const test_ = {\n                like: 'girls',\n                '_like': 'girl'\n            }\n            let _test = this.$extend(test,test_)\n            console.log(_test)\n        }\n    })\n\n    export default class About extends Vue {\n        msg !: string\n        msg_ = 'this is new msg'\n\n        myFunc: funcType = function (item: string, item_: string) : string {\n          return `${item} , ${item_}`\n        }\n\n        get _msg() : string {\n            return this.myFunc(this.msg, this.msg_)\n        }\n        set _msg(value: string) {\n            const val : string[] = value.split(',')\n            this.msg = val[0]\n            this.msg_ = val[1]\n        }\n    }\n</script>\n"]}]}